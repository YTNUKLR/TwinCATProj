<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="IOParams" Id="{a5664a88-4512-4669-bbf3-ce5ec238c33e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM IOParams
VAR
	iForLoopDMXI1			: INT;
	iForLoopDMXI2			: INT;
	iForLoopDMXI3			: INT;
	iForLoopDMXI4			: INT;
	iForLoopDMXI5			: INT;
	iForLoopDMXI6			: INT;
	iForLoopDMXI7			: INT;
	iForLoopDMXI8			: INT;
	uiForLoopDMXI10			: UINT;
	uiForLoopDMXI11			: UINT;
	uiForLoopDebouncePNP	: UINT;
	uiForLoopDebounceNPN	: UINT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Link all the user-specified params to the respective Function Blocks
//RED

(*
RGB PARAMETERS - Hence, the Groups of 4 incremented in this way;

FOR iForLoopDMXI1:= 0 TO gc.uiMaxNrOfDMXChannel BY 4 DO
	g_ast.DMX[iForLoopDMXI1].I.ENWaveform		:= ENUM_I_Waveform.EN_Sin; //"50% duty cycle"
	g_ast.DMX[iForLoopDMXI1].I.fDutyCycle		:= 50; // %
	g_ast.DMX[iForLoopDMXI1].I.fLevel			:= iSlider5; //%
	g_ast.DMX[iForLoopDMXI1].I.fOffset			:= 0; // %
	g_ast.DMX[iForLoopDMXI1].I.usiBitDepth		:= 8; // 0-8, or 0-16, depending
	g_ast.DMX[iForLoopDMXI1].I.fPhase			:= 0; // %
	g_ast.DMX[iForLoopDMXI1].I.fDelay			:= 0; // %
	g_ast.DMX[iForLoopDMXI1].I.usiDelayDiv		:= 0; // which step to have delay applied
END_FOR

//GREEN
FOR iForLoopDMXI2:= 1 TO gc.uiMaxNrOfDMXChannel BY 4 DO
	g_ast.DMX[iForLoopDMXI2].I.ENWaveform		:= ENUM_I_Waveform.EN_Sin; //"50% duty cycle"
	g_ast.DMX[iForLoopDMXI2].I.fDutyCycle		:= 50; // %
	g_ast.DMX[iForLoopDMXI2].I.fLevel			:= iSlider6; //%
	g_ast.DMX[iForLoopDMXI2].I.fOffset			:= 0; // %
	g_ast.DMX[iForLoopDMXI2].I.usiBitDepth		:= 8; // 0-8, or 0-16, depending
	g_ast.DMX[iForLoopDMXI2].I.fPhase			:= 0; // %
	g_ast.DMX[iForLoopDMXI2].I.fDelay			:= 0; // %
	g_ast.DMX[iForLoopDMXI2].I.usiDelayDiv		:= 0; // which step to have delay applied
END_FOR

//BLUE
FOR iForLoopDMXI3:= 2 TO gc.uiMaxNrOfDMXChannel BY 4 DO
	g_ast.DMX[iForLoopDMXI3].I.ENWaveform		:= ENUM_I_Waveform.EN_Sin; //"50% duty cycle"
	g_ast.DMX[iForLoopDMXI3].I.fDutyCycle		:= 50; // %
	g_ast.DMX[iForLoopDMXI3].I.fLevel			:= iSlider7; //%
	g_ast.DMX[iForLoopDMXI3].I.fOffset			:= 0; // %
	g_ast.DMX[iForLoopDMXI3].I.usiBitDepth		:= 8; // 0-8, or 0-16, depending
	g_ast.DMX[iForLoopDMXI3].I.fPhase			:= 0; // %
	g_ast.DMX[iForLoopDMXI3].I.fDelay			:= 0; // %
	g_ast.DMX[iForLoopDMXI3].I.usiDelayDiv		:= 0; // which step to have delay applied
END_FOR

//WHITE
FOR iForLoopDMXI4:= 3 TO gc.uiMaxNrOfDMXChannel BY 4 DO
	g_ast.DMX[iForLoopDMXI4].I.ENWaveform		:= ENUM_I_Waveform.EN_Sin; //"50% duty cycle"
	g_ast.DMX[iForLoopDMXI4].I.fDutyCycle		:= 50; // %
	g_ast.DMX[iForLoopDMXI4].I.fLevel			:= iSlider8; //%
	g_ast.DMX[iForLoopDMXI4].I.fOffset			:= 0; // %
	g_ast.DMX[iForLoopDMXI4].I.usiBitDepth		:= 8; // 0-8, or 0-16, depending
	g_ast.DMX[iForLoopDMXI4].I.fPhase			:= 0; // %
	g_ast.DMX[iForLoopDMXI4].I.fDelay			:= 0; // %
	g_ast.DMX[iForLoopDMXI4].I.usiDelayDiv		:= 0; // which step to have delay applied
END_FOR


FOR iForLoopDMXI5	:= 0 TO gc.uiMaxNrOfDMXChannel BY 4 DO 
	g_ast.DMX[iForLoopDMXI5].I.fFrequency		:= iSlider1; //Hz
END_FOR

FOR iForLoopDMXI6	:= 0 TO gc.uiMaxNrOfDMXChannel BY 4 DO 
	g_ast.DMX[iForLoopDMXI6].I.fFrequency		:= iSlider2; //Hz
END_FOR

FOR iForLoopDMXI7	:= 0 TO gc.uiMaxNrOfDMXChannel BY 4 DO 
	g_ast.DMX[iForLoopDMXI7].I.fFrequency		:= iSlider3; //Hz
END_FOR

FOR iForLoopDMXI8	:= 0 TO gc.uiMaxNrOfDMXChannel BY 4 DO 
	g_ast.DMX[iForLoopDMXI8].I.fFrequency		:= iSlider4; //Hz
END_FOR
*)

FOR uiForLoopDMXI10:= 0 TO gc.uiDUTConfigCountSplit BY 1 DO
	g_ast.DMX[uiForLoopDMXI10].I.fFrequency		:= 0;
	g_ast.DMX[uiForLoopDMXI10].I.ENWaveform		:= ENUM_I_Waveform.EN_GateCtrl;
	g_ast.DMX[uiForLoopDMXI10].I.ENValRange		:= ENUM_I_ValRange.EN_8Bit;
	g_ast.DMX[uiForLoopDMXI10].I.fDutyCycle		:= 100; // %
	g_ast.DMX[uiForLoopDMXI10].I.fLevel			:= 100; //%
	g_ast.DMX[uiForLoopDMXI10].I.fOffset		:= 0; // %
	g_ast.DMX[uiForLoopDMXI10].I.usiBitDepth	:= 8; // 0-8, or 0-16, depending
	g_ast.DMX[uiForLoopDMXI10].I.fPhase			:= 0; // %
	g_ast.DMX[uiForLoopDMXI10].I.fDelay			:= 0; // %
	g_ast.DMX[uiForLoopDMXI10].I.usiDelayDiv	:= 0; // which step to have delay applied
//Channels for Configuration of testing on other DMX Channels;
END_FOR

FOR uiForLoopDMXI10:= gc.uiChannelSplitCount TO gc.uiMaxNrOfDMXChannel BY 1 DO
	g_ast.DMX[uiForLoopDMXI10].I.fFrequency		:= 0;
	g_ast.DMX[uiForLoopDMXI10].I.ENWaveform		:= ENUM_I_Waveform.EN_GateConfig;
	g_ast.DMX[uiForLoopDMXI10].I.ENValRange		:= ENUM_I_ValRange.EN_8Bit;
	g_ast.DMX[uiForLoopDMXI10].I.fDutyCycle		:= 100; // %
	g_ast.DMX[uiForLoopDMXI10].I.fLevel			:= 100; //%
	g_ast.DMX[uiForLoopDMXI10].I.fOffset		:= 0; // %
	g_ast.DMX[uiForLoopDMXI10].I.usiBitDepth	:= 8; // 0-8, or 0-16, depending
	g_ast.DMX[uiForLoopDMXI10].I.fPhase			:= 0; // %
	g_ast.DMX[uiForLoopDMXI10].I.fDelay			:= 0; // %
	g_ast.DMX[uiForLoopDMXI10].I.usiDelayDiv	:= 0; // which step to have delay applied
//Channels for Configuration of testing on other DMX Channels;
END_FOR

//Input Debounce Params PNP
FOR uiForLoopDebouncePNP	:= 0 TO gc.uiMaxNrDMXTestCh BY 1 DO
	g_ast.arrFBIntPNP[uiForLoopDebouncePNP].I.tOnDelay	:= T#5MS;
	g_ast.arrFBIntPNP[uiForLoopDebouncePNP].I.tOffDelay	:= T#5MS;
END_FOR

//Input Debounce Params NPN
FOR uiForLoopDebounceNPN	:= 0 TO gc.uiMaxNrDMXTestCh BY 1 DO
	g_ast.arrFBIntNPN[uiForLoopDebounceNPN].I.tOnDelay	:= T#0S;
	g_ast.arrFBIntNPN[uiForLoopDebounceNPN].I.tOffDelay	:= T#3MS;
END_FOR

//Read the CSV Parameters into the DMX FBs - via the "mediating" Config arrays
FOR uiForLoopDMXI11:= 0 TO gc.uiMaxNrOfDMXChannel BY 1 DO
	g_ast.DMX[DMXTest.arr_uiRecipeIndex[uiForLoopDMXI11]].I.usiInputConfig	:= 	DMXTest.arr_usiRecipeSetting[uiForLoopDMXI11];
END_FOR
]]></ST>
    </Implementation>
    <LineIds Name="IOParams">
      <LineId Id="152" Count="0" />
      <LineId Id="479" Count="0" />
      <LineId Id="519" Count="0" />
      <LineId Id="516" Count="0" />
      <LineId Id="520" Count="1" />
      <LineId Id="443" Count="0" />
      <LineId Id="153" Count="0" />
      <LineId Id="392" Count="5" />
      <LineId Id="421" Count="0" />
      <LineId Id="406" Count="0" />
      <LineId Id="481" Count="0" />
      <LineId Id="445" Count="0" />
      <LineId Id="447" Count="8" />
      <LineId Id="446" Count="0" />
      <LineId Id="482" Count="0" />
      <LineId Id="457" Count="9" />
      <LineId Id="456" Count="0" />
      <LineId Id="478" Count="0" />
      <LineId Id="468" Count="9" />
      <LineId Id="467" Count="0" />
      <LineId Id="517" Count="0" />
      <LineId Id="333" Count="0" />
      <LineId Id="332" Count="0" />
      <LineId Id="336" Count="1" />
      <LineId Id="485" Count="0" />
      <LineId Id="487" Count="1" />
      <LineId Id="486" Count="0" />
      <LineId Id="490" Count="2" />
      <LineId Id="489" Count="0" />
      <LineId Id="494" Count="2" />
      <LineId Id="493" Count="0" />
      <LineId Id="243" Count="0" />
      <LineId Id="523" Count="1" />
      <LineId Id="556" Count="0" />
      <LineId Id="525" Count="0" />
      <LineId Id="534" Count="0" />
      <LineId Id="526" Count="6" />
      <LineId Id="589" Count="0" />
      <LineId Id="522" Count="0" />
      <LineId Id="635" Count="12" />
      <LineId Id="634" Count="0" />
      <LineId Id="670" Count="0" />
      <LineId Id="668" Count="0" />
      <LineId Id="673" Count="2" />
      <LineId Id="671" Count="0" />
      <LineId Id="682" Count="4" />
      <LineId Id="681" Count="0" />
      <LineId Id="621" Count="0" />
      <LineId Id="594" Count="0" />
      <LineId Id="591" Count="0" />
      <LineId Id="606" Count="0" />
      <LineId Id="604" Count="0" />
      <LineId Id="660" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>